@startuml Admin Monitoring Sequence

skinparam ParticipantPadding 20
skinparam BoxPadding 10
skinparam SequenceGroupBodyBackgroundColor transparent

actor Administrator
participant "Frontend" as UI
participant MonitoringController
participant MonitoringService
participant MetricsService
participant LogService
participant AlertService

Administrator -> UI: Access system dashboard
activate UI

UI -> MonitoringController: GET /admin/system/status
activate MonitoringController

MonitoringController -> MonitoringService: getSystemStatus()
activate MonitoringService

par System Metrics
    MonitoringService -> MetricsService: getPerformanceMetrics()
    activate MetricsService
    MetricsService --> MonitoringService: metrics
    deactivate MetricsService
else System Logs
    MonitoringService -> LogService: getRecentLogs()
    activate LogService
    LogService --> MonitoringService: logs
    deactivate LogService
else Active Alerts
    MonitoringService -> AlertService: getActiveAlerts()
    activate AlertService
    AlertService --> MonitoringService: alerts
    deactivate AlertService
end

MonitoringService --> MonitoringController: systemStatus
deactivate MonitoringService

MonitoringController --> UI: 200 OK\n{status, metrics, logs, alerts}
UI --> Administrator: Display system dashboard

deactivate MonitoringController
deactivate UI

@enduml 