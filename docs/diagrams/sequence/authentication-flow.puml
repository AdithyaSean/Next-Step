@startuml Authentication Sequence

skinparam ParticipantPadding 20
skinparam BoxPadding 10
skinparam SequenceGroupBodyBackgroundColor transparent

actor User
participant AuthController
participant AuthService
participant UserRepository
participant JWTService

User -> AuthController: POST /auth/login\n(email, password)
activate AuthController

AuthController -> AuthService: authenticate(email, password)
activate AuthService

AuthService -> UserRepository: findByEmail(email)
activate UserRepository
UserRepository --> AuthService: user
deactivate UserRepository

alt user not found
    AuthService --> AuthController: throw UserNotFoundException
    AuthController --> User: 404 Not Found
else invalid password
    AuthService -> AuthService: validatePassword(password)
    AuthService --> AuthController: throw InvalidCredentialsException
    AuthController --> User: 401 Unauthorized
else successful authentication
    AuthService -> JWTService: generateToken(user)
    activate JWTService
    JWTService --> AuthService: token
    deactivate JWTService
    
    AuthService --> AuthController: AuthResponse(token, user)
    AuthController --> User: 200 OK\n{token, user}
end

deactivate AuthService
deactivate AuthController

@enduml