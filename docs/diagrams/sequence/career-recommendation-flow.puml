@startuml Career Recommendation Sequence

skinparam ParticipantPadding 20
skinparam BoxPadding 10
skinparam SequenceGroupBodyBackgroundColor transparent

actor Student
participant "Frontend" as UI
participant RecommendationController
participant AIService
participant ProfileService
participant UserRepository

Student -> UI: Request career recommendations
activate UI

UI -> RecommendationController: GET /recommendations
activate RecommendationController

RecommendationController -> ProfileService: getStudentProfile(studentId)
activate ProfileService

ProfileService -> UserRepository: findById(studentId)
activate UserRepository
UserRepository --> ProfileService: studentProfile
deactivate UserRepository

ProfileService --> RecommendationController: profileData
deactivate ProfileService

RecommendationController -> AIService: generateRecommendations(profileData)
activate AIService

AIService -> AIService: analyzeAcademicData()
AIService -> AIService: processPreferences()
AIService -> AIService: matchCareerPaths()

AIService --> RecommendationController: recommendations
deactivate AIService

RecommendationController --> UI: 200 OK\n{recommendations}
UI --> Student: Display recommendations

deactivate RecommendationController
deactivate UI

@enduml 