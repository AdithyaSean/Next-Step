@startuml Admissions Management Sequence

skinparam ParticipantPadding 20
skinparam BoxPadding 10
skinparam SequenceGroupBodyBackgroundColor transparent

actor Institution
participant "Frontend" as UI
participant AdmissionsController
participant AdmissionsService
participant ApplicationRepository
participant NotificationService
participant EmailService

Institution -> UI: Process admission application
activate UI

UI -> AdmissionsController: PUT /admissions/{applicationId}\n(decision, comments)
activate AdmissionsController

AdmissionsController -> AdmissionsService: processApplication(applicationId, decision)
activate AdmissionsService

AdmissionsService -> ApplicationRepository: findById(applicationId)
activate ApplicationRepository
ApplicationRepository --> AdmissionsService: application
deactivate ApplicationRepository

AdmissionsService -> ApplicationRepository: updateStatus(application)
activate ApplicationRepository
ApplicationRepository --> AdmissionsService: updatedApplication
deactivate ApplicationRepository

AdmissionsService -> NotificationService: notifyStudent(application)
activate NotificationService

NotificationService -> EmailService: sendDecisionEmail(student, decision)
activate EmailService
EmailService --> NotificationService: success
deactivate EmailService

NotificationService --> AdmissionsService: success
deactivate NotificationService

AdmissionsService --> AdmissionsController: applicationDTO
deactivate AdmissionsService

AdmissionsController --> UI: 200 OK
UI --> Institution: Application processed

deactivate AdmissionsController
deactivate UI

@enduml 