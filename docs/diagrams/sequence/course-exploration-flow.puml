@startuml Course Exploration Sequence

skinparam ParticipantPadding 20
skinparam BoxPadding 10
skinparam SequenceGroupBodyBackgroundColor transparent

actor Student
participant "Frontend" as UI
participant CourseController
participant CourseService
participant InstitutionService
participant FilterService
participant CourseRepository

Student -> UI: Access course explorer
activate UI

UI -> CourseController: GET /courses/search\n(filters, page, size)
activate CourseController

CourseController -> FilterService: validateFilters(filters)
activate FilterService
FilterService --> CourseController: validatedFilters
deactivate FilterService

CourseController -> CourseService: searchCourses(filters)
activate CourseService

CourseService -> CourseRepository: findByFilters(criteria)
activate CourseRepository
CourseRepository --> CourseService: coursesList
deactivate CourseRepository

CourseService -> InstitutionService: enrichWithInstitutionData(courses)
activate InstitutionService
InstitutionService --> CourseService: enrichedCourses
deactivate InstitutionService

CourseService --> CourseController: paginatedResults
deactivate CourseService

CourseController --> UI: 200 OK\n{courses, metadata}
UI --> Student: Display course results

deactivate CourseController
deactivate UI

@enduml 